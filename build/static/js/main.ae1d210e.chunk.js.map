{"version":3,"sources":["repository/Repository.ts","models/Item.ts","repository/Qiita.ts","index.tsx"],"names":["baseURL","axios","create","Item","object","title","this","QiitaRepository","repository","get","params","then","response","data","map","x","createModule","Symbol","withActions","$mounted","startCount","countDone","items","payload","withState","useModule","CounterActions","getCounterState","Counter","useState","index","key","epic","on","Rx","a","getItem","reducer","isLoading","count","state","ReactDOM","render","document","getElementById"],"mappings":"iSAGMA,EAAO,UADM,oBACN,WAEEC,MAAMC,OAAO,CAACF,YCLRG,EAEjB,WAAYC,GAAc,yBAD1BC,WACyB,EACvBC,KAAKD,MAAQD,EAAOC,OCALE,E,qOAEVC,EAAWC,IACd,SACA,CACEC,OAAQ,CACN,KAAQ,IACR,SAAY,KACZ,MAAS,WAGfC,MAAK,SAACC,GAAe,OAAOA,EAASC,KAAKC,KAAI,SAACC,GAAD,OAAY,IAAIZ,EAAKY,U,+RCLbC,YAC1DC,OAAO,YAGNC,YAAY,CACXC,SAAU,KACVC,WAAY,KACZC,UAAW,SAACC,GAAD,MAAiB,CAAEC,QAAS,CAAED,aAE1CE,Y,mBATWC,E,KAAWC,E,KAAgBC,E,KAiDlC,SAASC,IAEdH,IAFwB,IAMhBH,EAAUK,EAAgBE,WAA1BP,MAER,OACE,6BACGA,EAAMR,KAAI,SAACC,EAAGe,GAAJ,OAAc,yBAAKC,IAAKD,GAAQf,EAAEV,WAjCnDoB,EACGO,OAEAC,GAAGP,EAAeP,UAAU,WAAQ,OAAOe,IAAMR,EAAeN,iBAChEa,GAAGP,EAAeN,WAJrB,sBAIiC,4BAAAe,EAAA,6DACvB3B,EAAa,IAAID,EADM,kBAEtBC,EAAW4B,UAAUzB,MAAK,SAACC,GAAD,OAAcc,EAAeL,UAAUT,OAF3C,4CAOjCa,EACGY,QAnBgC,CACjCC,WAAW,EACXC,MAAO,EACPjB,MAAO,KAiBNW,GAAGP,EAAeN,YAAY,SAAAoB,GAC7BA,EAAMF,WAAY,KAEnBL,GAAGP,EAAeL,WAAW,SAACmB,EAAD,GAAuB,IAAblB,EAAY,EAAZA,MACtCkB,EAAMF,WAAY,EAClBE,EAAMlB,MAAQA,KAoBlBmB,IAASC,OACP,kBAAC,IAAD,KACE,kBAACd,EAAD,OAEFe,SAASC,eAAe,U","file":"static/js/main.ae1d210e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseDomain = \"https://qiita.com\"\nconst baseURL = `${baseDomain}/api/v2`\n\nexport default axios.create({baseURL});","export default class Item {\n    title: string;\n    constructor(object: any) {\n      this.title = object.title\n    }\n}","import repository from \"./Repository\"\nimport Item from \"../models/Item\"\n\nexport default class QiitaRepository {\n  async getItem(): Promise<any> {\n    return repository.get(\n        \"/items\",\n        {\n          params: {\n            \"page\": \"1\",\n            \"per_page\": \"20\",\n            \"query\": \"react\",\n          }\n        }\n    ).then((response) => { return response.data.map((x: any) => new Item(x))}\n    )}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Rx from 'typeless/rx';\nimport { createModule, DefaultTypelessProvider } from 'typeless';\nimport QiitaRepository from './repository/Qiita'\nimport Item from './models/Item'\n\n/* == Module Interface == */\n\nexport const [useModule, CounterActions, getCounterState] = createModule(\n  Symbol('counter')\n)\n  // Create Actions Creators\n  .withActions({\n    $mounted: null,\n    startCount: null, // null means no args\n    countDone: (items: any) => ({ payload: { items } }),\n  })\n  .withState<CounterState>();\n\nexport interface CounterState {\n  isLoading: boolean;\n  count: number;\n  items: Array<Item>\n}\n\n/* == Module Implementation == */\n\nconst initialState: CounterState = {\n  isLoading: false,\n  count: 0,\n  items: []\n};\n\n// Create Epic for side effects\nuseModule\n  .epic()\n  // Listen for `count` and dispatch `countDone` with 500ms delay\n  .on(CounterActions.$mounted, ()  => {return Rx.of(CounterActions.startCount())})\n  .on(CounterActions.startCount, async() => {\n    const repository = new QiitaRepository()\n    return repository.getItem().then((response) => CounterActions.countDone(response))\n  });\n\n// Create a reducer\n// Under the hood it uses `immer` and state mutations are allowed\nuseModule\n  .reducer(initialState)\n  .on(CounterActions.startCount, state => {\n    state.isLoading = true;\n  })\n  .on(CounterActions.countDone, (state, { items }) => {\n    state.isLoading = false;\n    state.items = items;\n  });\n\n/* == Use Module in React == */\n\nexport function Counter() {\n  // load epic and reducer\n  useModule();\n\n  // wrap actions with `dispatch`\n  // get state from store\n  const { items } = getCounterState.useState();\n\n  return (\n    <div>\n      {items.map((x, index) => <div key={index}>{x.title}</div>)}\n    </div>\n  );\n}\n\nReactDOM.render(\n  <DefaultTypelessProvider>\n    <Counter />\n  </DefaultTypelessProvider>,\n  document.getElementById('app')\n);"],"sourceRoot":""}