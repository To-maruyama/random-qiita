{"ast":null,"code":"import _regeneratorRuntime from\"/Users/maru/project/typless-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/maru/project/typless-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/maru/project/typless-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import ReactDOM from'react-dom';import*as Rx from'typeless/rx';import{createModule,DefaultTypelessProvider}from'typeless';import QiitaRepository from'./repository/Qiita';/* == Module Interface == */var _createModule$withAct=createModule(Symbol('counter'))// Create Actions Creators\n.withActions({$mounted:null,startCount:null,// null means no args\ncountDone:function countDone(items){return{payload:{items:items}};}}).withState(),_createModule$withAct2=_slicedToArray(_createModule$withAct,3),useModule=_createModule$withAct2[0],CounterActions=_createModule$withAct2[1],getCounterState=_createModule$withAct2[2];export{useModule,CounterActions,getCounterState};/* == Module Implementation == */var initialState={isLoading:false,count:0,items:[]};// Create Epic for side effects\nuseModule.epic()// Listen for `count` and dispatch `countDone` with 500ms delay\n.on(CounterActions.$mounted,function(){return Rx.of(CounterActions.startCount());}).on(CounterActions.startCount,/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var repository;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:repository=new QiitaRepository();return _context.abrupt(\"return\",repository.getItem().then(function(response){return CounterActions.countDone(response);}));case 2:case\"end\":return _context.stop();}}},_callee);})));// Create a reducer\n// Under the hood it uses `immer` and state mutations are allowed\nuseModule.reducer(initialState).on(CounterActions.startCount,function(state){state.isLoading=true;}).on(CounterActions.countDone,function(state,_ref2){var items=_ref2.items;state.isLoading=false;state.items=items;});/* == Use Module in React == */export function Counter(){// load epic and reducer\nuseModule();// wrap actions with `dispatch`\n// get state from store\nvar _getCounterState$useS=getCounterState.useState(),items=_getCounterState$useS.items;return React.createElement(\"div\",null,items.map(function(x,index){return React.createElement(\"div\",{key:index},x.title);}));}ReactDOM.render(React.createElement(DefaultTypelessProvider,null,React.createElement(Counter,null)),document.getElementById('app'));","map":{"version":3,"sources":["/Users/maru/project/typless-sample/src/index.tsx"],"names":["React","ReactDOM","Rx","createModule","DefaultTypelessProvider","QiitaRepository","Symbol","withActions","$mounted","startCount","countDone","items","payload","withState","useModule","CounterActions","getCounterState","initialState","isLoading","count","epic","on","of","repository","getItem","then","response","reducer","state","Counter","useState","map","x","index","title","render","document","getElementById"],"mappings":"wcAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,GAAKC,CAAAA,EAAZ,KAAoB,aAApB,CACA,OAASC,YAAT,CAAuBC,uBAAvB,KAAsD,UAAtD,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CAGA,4B,0BAE4DF,YAAY,CACtEG,MAAM,CAAC,SAAD,CADgE,CAGtE;AAH0D,CAIzDC,WAJyD,CAI7C,CACXC,QAAQ,CAAE,IADC,CAEXC,UAAU,CAAE,IAFD,CAEO;AAClBC,SAAS,CAAE,mBAACC,KAAD,QAAiB,CAAEC,OAAO,CAAE,CAAED,KAAK,CAALA,KAAF,CAAX,CAAjB,EAHA,CAJ6C,EASzDE,SATyD,E,gEAA9CC,S,2BAAWC,c,2BAAgBC,e,4EAiBzC,iCAEA,GAAMC,CAAAA,YAA0B,CAAG,CACjCC,SAAS,CAAE,KADsB,CAEjCC,KAAK,CAAE,CAF0B,CAGjCR,KAAK,CAAE,EAH0B,CAAnC,CAMA;AACAG,SAAS,CACNM,IADH,EAEE;AAFF,CAGGC,EAHH,CAGMN,cAAc,CAACP,QAHrB,CAG+B,UAAO,CAAC,MAAON,CAAAA,EAAE,CAACoB,EAAH,CAAMP,cAAc,CAACN,UAAf,EAAN,CAAP,CAA0C,CAHjF,EAIGY,EAJH,CAIMN,cAAc,CAACN,UAJrB,sEAIiC,kJACvBc,UADuB,CACV,GAAIlB,CAAAA,eAAJ,EADU,iCAEtBkB,UAAU,CAACC,OAAX,GAAqBC,IAArB,CAA0B,SAACC,QAAD,QAAcX,CAAAA,cAAc,CAACL,SAAf,CAAyBgB,QAAzB,CAAd,EAA1B,CAFsB,wDAJjC,IASA;AACA;AACAZ,SAAS,CACNa,OADH,CACWV,YADX,EAEGI,EAFH,CAEMN,cAAc,CAACN,UAFrB,CAEiC,SAAAmB,KAAK,CAAI,CACtCA,KAAK,CAACV,SAAN,CAAkB,IAAlB,CACD,CAJH,EAKGG,EALH,CAKMN,cAAc,CAACL,SALrB,CAKgC,SAACkB,KAAD,OAAsB,IAAZjB,CAAAA,KAAY,OAAZA,KAAY,CAClDiB,KAAK,CAACV,SAAN,CAAkB,KAAlB,CACAU,KAAK,CAACjB,KAAN,CAAcA,KAAd,CACD,CARH,EAUA,+BAEA,MAAO,SAASkB,CAAAA,OAAT,EAAmB,CACxB;AACAf,SAAS,GAET;AACA;AALwB,0BAMNE,eAAe,CAACc,QAAhB,EANM,CAMhBnB,KANgB,uBAMhBA,KANgB,CAQxB,MACE,gCACGA,KAAK,CAACoB,GAAN,CAAU,SAACC,CAAD,CAAIC,KAAJ,QAAc,4BAAK,GAAG,CAAEA,KAAV,EAAkBD,CAAC,CAACE,KAApB,CAAd,EAAV,CADH,CADF,CAKD,CAEDjC,QAAQ,CAACkC,MAAT,CACE,oBAAC,uBAAD,MACE,oBAAC,OAAD,MADF,CADF,CAIEC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAJF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Rx from 'typeless/rx';\nimport { createModule, DefaultTypelessProvider } from 'typeless';\nimport QiitaRepository from './repository/Qiita'\nimport Item from './models/Item'\n\n/* == Module Interface == */\n\nexport const [useModule, CounterActions, getCounterState] = createModule(\n  Symbol('counter')\n)\n  // Create Actions Creators\n  .withActions({\n    $mounted: null,\n    startCount: null, // null means no args\n    countDone: (items: any) => ({ payload: { items } }),\n  })\n  .withState<CounterState>();\n\nexport interface CounterState {\n  isLoading: boolean;\n  count: number;\n  items: Array<Item>\n}\n\n/* == Module Implementation == */\n\nconst initialState: CounterState = {\n  isLoading: false,\n  count: 0,\n  items: []\n};\n\n// Create Epic for side effects\nuseModule\n  .epic()\n  // Listen for `count` and dispatch `countDone` with 500ms delay\n  .on(CounterActions.$mounted, ()  => {return Rx.of(CounterActions.startCount())})\n  .on(CounterActions.startCount, async() => {\n    const repository = new QiitaRepository()\n    return repository.getItem().then((response) => CounterActions.countDone(response))\n  });\n\n// Create a reducer\n// Under the hood it uses `immer` and state mutations are allowed\nuseModule\n  .reducer(initialState)\n  .on(CounterActions.startCount, state => {\n    state.isLoading = true;\n  })\n  .on(CounterActions.countDone, (state, { items }) => {\n    state.isLoading = false;\n    state.items = items;\n  });\n\n/* == Use Module in React == */\n\nexport function Counter() {\n  // load epic and reducer\n  useModule();\n\n  // wrap actions with `dispatch`\n  // get state from store\n  const { items } = getCounterState.useState();\n\n  return (\n    <div>\n      {items.map((x, index) => <div key={index}>{x.title}</div>)}\n    </div>\n  );\n}\n\nReactDOM.render(\n  <DefaultTypelessProvider>\n    <Counter />\n  </DefaultTypelessProvider>,\n  document.getElementById('app')\n);"]},"metadata":{},"sourceType":"module"}