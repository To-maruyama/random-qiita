{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nexport function useMappedState(stateGetters, mapper, deps) {\n  if (deps === void 0) {\n    deps = [];\n  }\n\n  var mapperCached = React.useCallback(mapper, deps);\n\n  var _a = tslib_1.__read(React.useReducer(function (x) {\n    return x + 1;\n  }, 0), 2),\n      forceUpdate = _a[1];\n\n  var stores = React.useMemo(function () {\n    return stateGetters.map(function (getter) {\n      if (!getter._store) {\n        throw new Error(\"_store not found in getter for module \\\"\" + (getter._module || 'unknown') + \"\\\". Make sure to load the module before using 'useState' or 'useMappedState'.\");\n      }\n\n      return getter._store;\n    });\n  }, []);\n\n  var getMappedState = function () {\n    var states = stores.map(function (store) {\n      return store.state;\n    });\n    return mapperCached.apply(void 0, tslib_1.__spread(states));\n  };\n\n  var getSubscribeFn = function () {\n    stateRef.current = getMappedState();\n    forceUpdate({});\n  };\n\n  var stateRef = React.useRef(getMappedState());\n  var subscribeRef = React.useRef(getSubscribeFn);\n  React.useLayoutEffect(function () {\n    var subscriptions = stores.map(function (store) {\n      return store.subscribe(function () {\n        return subscribeRef.current();\n      });\n    });\n    return function () {\n      subscriptions.forEach(function (subscription) {\n        return subscription();\n      });\n    };\n  }, []);\n  React.useMemo(function () {\n    stateRef.current = getMappedState();\n    subscribeRef.current = getSubscribeFn;\n  }, deps);\n  return stateRef.current;\n}","map":null,"metadata":{},"sourceType":"module"}