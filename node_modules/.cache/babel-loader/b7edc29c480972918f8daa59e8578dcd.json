{"ast":null,"code":"import _slicedToArray from \"/Users/maru/project/random-qiita/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maru/project/random-qiita/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Rx from 'typeless/rx';\nimport { createModule, DefaultTypelessProvider } from 'typeless';\nimport QiitaRepository from './repository/Qiita';\nimport { Tags } from './models/Tag';\n/* == Module Interface == */\n\nconst _createModule$withAct = createModule(Symbol('counter')) // Create Actions Creators\n.withActions({\n  $mounted: null,\n  getItems: tags => ({\n    payload: {\n      tags\n    }\n  }),\n  // null means no args\n  getItemsDone: (items, tags) => ({\n    payload: {\n      items,\n      tags\n    }\n  }),\n  getTags: null,\n  // null means no args\n  getTagsDone: tags => ({\n    payload: {\n      tags\n    }\n  })\n}).withState(),\n      _createModule$withAct2 = _slicedToArray(_createModule$withAct, 3),\n      useModule = _createModule$withAct2[0],\n      CounterActions = _createModule$withAct2[1],\n      getCounterState = _createModule$withAct2[2];\n\nexport { useModule, CounterActions, getCounterState };\n\n/* == Module Implementation == */\nconst initialState = {\n  items: [],\n  tags: new Tags([])\n};\nconst repository = new QiitaRepository(); // Create Epic for side effects\n\nuseModule.epic() // Listen for `count` and dispatch `countDone` with 500ms delay\n.on(CounterActions.$mounted, () => {\n  return Rx.of(CounterActions.getTags());\n}).on(CounterActions.getTags, async () => {\n  const page = Math.floor(Math.random() * 99) + 1;\n  return repository.getTags(page).then(result => CounterActions.getTagsDone(result));\n}).on(CounterActions.getTagsDone, ({\n  tags\n}) => {\n  return Rx.of(CounterActions.getItems(tags));\n}).on(CounterActions.getItems, async ({\n  tags\n}) => {\n  return repository.getItems(tags.query).then(result => CounterActions.getItemsDone(result, tags));\n}); // Create a reducer\n// Under the hood it uses `immer` and state mutations are allowed\n\nuseModule.reducer(initialState).on(CounterActions.getItemsDone, (state, {\n  items,\n  tags\n}) => {\n  state.tags = tags;\n  state.items = items;\n});\n/* == Use Module in React == */\n\nexport function Counter() {\n  // load epic and reducer\n  useModule(); // wrap actions with `dispatch`\n  // get state from store\n\n  const _getCounterState$useS = getCounterState.useState(),\n        items = _getCounterState$useS.items,\n        tags = _getCounterState$useS.tags;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"\\u691C\\u7D22\\u30BF\\u30B0\", React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, tags.idsString)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, items.map((x, index) => React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: x.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, x.title))))));\n}\nReactDOM.render(React.createElement(DefaultTypelessProvider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}, React.createElement(Counter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n})), document.getElementById('app'));","map":{"version":3,"sources":["/Users/maru/project/random-qiita/src/index.tsx"],"names":["React","ReactDOM","Rx","createModule","DefaultTypelessProvider","QiitaRepository","Tags","Symbol","withActions","$mounted","getItems","tags","payload","getItemsDone","items","getTags","getTagsDone","withState","useModule","CounterActions","getCounterState","initialState","repository","epic","on","of","page","Math","floor","random","then","result","query","reducer","state","Counter","useState","idsString","map","x","index","url","title","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Rx from 'typeless/rx';\nimport { createModule, DefaultTypelessProvider } from 'typeless';\nimport QiitaRepository from './repository/Qiita'\nimport Item from './models/Item'\nimport {Tags} from './models/Tag'\n\n/* == Module Interface == */\n\nexport const [useModule, CounterActions, getCounterState] = createModule(\n  Symbol('counter')\n)\n  // Create Actions Creators\n  .withActions({\n    $mounted: null,\n    getItems: (tags: Tags) => ({ payload: { tags } }), // null means no args\n    getItemsDone: (items: Array<Item>, tags: Tags) => ({ payload: { items, tags } }),\n    getTags: null, // null means no args\n    getTagsDone: (tags: Tags) => ({ payload: { tags } }),\n  })\n  .withState<CounterState>();\n\nexport interface CounterState {\n  items: Array<Item>,\n  tags: Tags\n}\n\n/* == Module Implementation == */\n\nconst initialState: CounterState = {\n  items: [],\n  tags: new Tags([])\n};\n\nconst repository = new QiitaRepository()\n\n// Create Epic for side effects\nuseModule\n  .epic()\n  // Listen for `count` and dispatch `countDone` with 500ms delay\n  .on(CounterActions.$mounted, ()  => {return Rx.of(CounterActions.getTags())})\n  .on(CounterActions.getTags, async() => {\n    const page = Math.floor( Math.random() * 99 ) + 1\n    return repository.getTags(page).then((result) => CounterActions.getTagsDone(result))\n  })\n  .on(CounterActions.getTagsDone, ({tags}) => {return Rx.of(CounterActions.getItems(tags))})\n  .on(CounterActions.getItems, async({tags}) => {\n    return repository.getItems(tags.query).then((result) => CounterActions.getItemsDone(result, tags))\n  });\n\n// Create a reducer\n// Under the hood it uses `immer` and state mutations are allowed\nuseModule\n  .reducer(initialState)\n  .on(CounterActions.getItemsDone, (state, { items, tags }) => {\n    state.tags = tags;\n    state.items = items;\n  });\n\n/* == Use Module in React == */\n\nexport function Counter() {\n  // load epic and reducer\n  useModule();\n\n  // wrap actions with `dispatch`\n  // get state from store\n  const { items, tags } = getCounterState.useState();\n\n  return (\n    <div>\n    <div>\n      検索タグ<h3>{tags.idsString}</h3>\n    </div>\n    <div>\n      <ul>\n        \n        {items.map((x, index) => \n          <li><a href={x.url}>{x.title}</a></li>\n        )}\n        \n      </ul>\n    </div>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <DefaultTypelessProvider>\n    <Counter />\n  </DefaultTypelessProvider>,\n  document.getElementById('app')\n);"]},"metadata":{},"sourceType":"module"}