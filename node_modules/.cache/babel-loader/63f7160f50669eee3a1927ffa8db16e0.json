{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/maru/project/random-qiita/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/maru/project/random-qiita/src/ItemList.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    margin: 0,10,0,10\\n  \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useModule, getQiitaState } from './index';\nimport { Card, CardContent, Typography, Grid, Link, Chip } from '@material-ui/core/.';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styled from \"styled-components\";\nconst useStyles = makeStyles(theme => ({\n  search_tag: {\n    color: '#fff',\n    marginBottom: 10\n  },\n  card: {\n    maxWidth: 275\n  },\n  tags: {\n    marginBottom: 12\n  },\n  tag: {\n    marginRight: theme.spacing(1),\n    marginBottom: 5\n  },\n  title: {\n    marginBottom: 10\n  }\n}));\nconst ContentBody = styled(Typography)(_templateObject());\nexport function ItemList() {\n  useModule();\n  const classes = useStyles();\n\n  const _getQiitaState$useSta = getQiitaState.useState(),\n        items = _getQiitaState$useSta.items,\n        tags = _getQiitaState$useSta.tags;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.search_tag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"\\u691C\\u7D22\\u30BF\\u30B0 : \", tags.idsString), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"flex-start\",\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, items.map((x, index) => React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: x.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Card, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"flex-start\",\n    direction: \"row\",\n    className: classes.tags,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, x.tags.map((tag, index) => React.createElement(Chip, {\n    className: classes.tag,\n    color: \"primary\",\n    label: tag.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))), React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h2\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, x.title), React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"\\u3044\\u3044\\u306D \", x.likesCount), React.createElement(ContentBody, {\n    variant: \"body2\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, x.body), React.createElement(Typography, {\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"\\u4F5C\\u6210\\u65E5\\uFF1A\", x.createdAtView), React.createElement(Typography, {\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\u66F4\\u65B0\\u65E5\\uFF1A\", x.updatedAtView)))))))));\n}","map":{"version":3,"sources":["/Users/maru/project/random-qiita/src/ItemList.tsx"],"names":["React","useModule","getQiitaState","Card","CardContent","Typography","Grid","Link","Chip","makeStyles","styled","useStyles","theme","search_tag","color","marginBottom","card","maxWidth","tags","tag","marginRight","spacing","title","ContentBody","ItemList","classes","useState","items","idsString","map","x","index","url","id","likesCount","body","createdAtView","updatedAtView"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useModule, getQiitaState} from './index'\n\nimport {Card, CardContent, Typography, Grid, Link, Chip} from '@material-ui/core/.';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport styled from \"styled-components\";\n\nconst useStyles = makeStyles(theme => ({\n    search_tag: {\n      color: '#fff',\n      marginBottom: 10,\n    },\n    card: {\n      maxWidth: 275,\n    },\n    tags: {\n      marginBottom: 12,\n    },\n    tag: {\n      marginRight: theme.spacing(1),\n      marginBottom: 5,\n    },\n    title: {\n      marginBottom: 10,\n    }\n  }));\n\n  const ContentBody = styled(Typography)`\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    margin: 0,10,0,10\n  `\n\nexport function ItemList() {\n    useModule();\n\n    const classes = useStyles();\n    const { items, tags } = getQiitaState.useState();\n  \n    return (\n      <div>\n        <div className={classes.search_tag}>\n          検索タグ : {tags.idsString}\n        </div>\n        <div>\n          <Grid container spacing={3} justify=\"flex-start\" direction=\"row\">\n            {items.map((x, index) =>\n              <Grid item xs={4}>\n                <Link href={x.url}>\n                  <Card key={index}>\n                    <CardContent>\n                      <Grid container spacing={3} justify=\"flex-start\" direction=\"row\" className={classes.tags}>\n                        {x.tags.map((tag, index) => \n                          <Chip className={classes.tag} color=\"primary\" label={tag.id} />\n                        )}\n                      </Grid>\n                      <Typography variant=\"h6\" component=\"h2\" className={classes.title} >\n                        {x.title}\n                      </Typography>\n                      <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        いいね {x.likesCount}\n                      </Typography>\n                      <ContentBody variant=\"body2\" component=\"p\">\n                        {x.body}\n                      </ContentBody>\n                      <Typography color=\"textSecondary\">\n                        作成日：{x.createdAtView}\n                      </Typography>\n                      <Typography color=\"textSecondary\">\n                        更新日：{x.updatedAtView}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Link>\n                </Grid>\n            )}\n          </Grid>\n        </div>\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}