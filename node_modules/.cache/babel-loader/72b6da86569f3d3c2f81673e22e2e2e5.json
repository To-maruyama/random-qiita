{"ast":null,"code":"import _regeneratorRuntime from\"/Users/maru/project/random-qiita/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/maru/project/random-qiita/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/maru/project/random-qiita/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import ReactDOM from'react-dom';import*as Rx from'typeless/rx';import{createModule,DefaultTypelessProvider}from'typeless';import QiitaRepository from'./repository/Qiita';import{Tags}from'./models/Tag';import{ItemList}from'./ItemList';/* == Module Interface == */var _createModule$withAct=createModule(Symbol('qiita'))// Create Actions Creators\n.withActions({$mounted:null,getItems:function getItems(tags){return{payload:{tags:tags}};},// null means no args\ngetItemsDone:function getItemsDone(items,tags){return{payload:{items:items,tags:tags}};},getTags:null,// null means no args\ngetTagsDone:function getTagsDone(tags){return{payload:{tags:tags}};}}).withState(),_createModule$withAct2=_slicedToArray(_createModule$withAct,3),useModule=_createModule$withAct2[0],QiitaActions=_createModule$withAct2[1],getQiitaState=_createModule$withAct2[2];export{useModule,QiitaActions,getQiitaState};/* == Module Implementation == */var initialState={items:[],tags:new Tags([])};var repository=new QiitaRepository();// Create Epic for side effects\nuseModule.epic()// Listen for `count` and dispatch `countDone` with 500ms delay\n.on(QiitaActions.$mounted,function(){return Rx.of(QiitaActions.getTags());}).on(QiitaActions.getTags,/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var page;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:page=Math.floor(Math.random()*99)+1;return _context.abrupt(\"return\",repository.getTags(page).then(function(result){return QiitaActions.getTagsDone(result);}));case 2:case\"end\":return _context.stop();}}},_callee);}))).on(QiitaActions.getTagsDone,function(_ref2){var tags=_ref2.tags;return Rx.of(QiitaActions.getItems(tags));}).on(QiitaActions.getItems,/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3){var tags;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:tags=_ref3.tags;return _context2.abrupt(\"return\",repository.getItems(tags.query).then(function(result){return QiitaActions.getItemsDone(result,tags);}));case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref4.apply(this,arguments);};}());// Create a reducer\n// Under the hood it uses `immer` and state mutations are allowed\nuseModule.reducer(initialState).on(QiitaActions.getItemsDone,function(state,_ref5){var items=_ref5.items,tags=_ref5.tags;state.tags=tags;state.items=items;});ReactDOM.render(React.createElement(DefaultTypelessProvider,null,React.createElement(ItemList,null)),document.getElementById('app'));","map":{"version":3,"sources":["/Users/maru/project/random-qiita/src/index.tsx"],"names":["React","ReactDOM","Rx","createModule","DefaultTypelessProvider","QiitaRepository","Tags","ItemList","Symbol","withActions","$mounted","getItems","tags","payload","getItemsDone","items","getTags","getTagsDone","withState","useModule","QiitaActions","getQiitaState","initialState","repository","epic","on","of","page","Math","floor","random","then","result","query","reducer","state","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Rx from 'typeless/rx';\nimport { createModule, DefaultTypelessProvider } from 'typeless';\nimport QiitaRepository from './repository/Qiita'\nimport Item from './models/Item'\nimport {Tags} from './models/Tag'\nimport {ItemList} from './ItemList'\n\n/* == Module Interface == */\n\nexport const [useModule, QiitaActions, getQiitaState] = createModule(\n  Symbol('qiita')\n)\n  // Create Actions Creators\n  .withActions({\n    $mounted: null,\n    getItems: (tags: Tags) => ({ payload: { tags } }), // null means no args\n    getItemsDone: (items: Array<Item>, tags: Tags) => ({ payload: { items, tags } }),\n    getTags: null, // null means no args\n    getTagsDone: (tags: Tags) => ({ payload: { tags } }),\n  })\n  .withState<QiitaState>();\n\nexport interface QiitaState {\n  items: Array<Item>,\n  tags: Tags\n}\n\n/* == Module Implementation == */\n\nconst initialState: QiitaState = {\n  items: [],\n  tags: new Tags([])\n};\n\nconst repository = new QiitaRepository()\n\n// Create Epic for side effects\nuseModule\n  .epic()\n  // Listen for `count` and dispatch `countDone` with 500ms delay\n  .on(QiitaActions.$mounted, ()  => {return Rx.of(QiitaActions.getTags())})\n  .on(QiitaActions.getTags, async() => {\n    const page = Math.floor( Math.random() * 99 ) + 1\n    return repository.getTags(page).then((result) => QiitaActions.getTagsDone(result))\n  })\n  .on(QiitaActions.getTagsDone, ({tags}) => {return Rx.of(QiitaActions.getItems(tags))})\n  .on(QiitaActions.getItems, async({tags}) => {\n    return repository.getItems(tags.query).then((result) => QiitaActions.getItemsDone(result, tags))\n  });\n\n// Create a reducer\n// Under the hood it uses `immer` and state mutations are allowed\nuseModule\n  .reducer(initialState)\n  .on(QiitaActions.getItemsDone, (state, { items, tags }) => {\n    state.tags = tags;\n    state.items = items;\n  });\n\nReactDOM.render(\n  <DefaultTypelessProvider>\n    <ItemList />\n  </DefaultTypelessProvider>,\n  document.getElementById('app')\n);"]},"metadata":{},"sourceType":"module"}