{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { memoize } from './utils';\nexport function createSelector() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var selectors = args.slice(0, args.length - 1);\n  var resultFunc = args[args.length - 1];\n  var recomputations = 0;\n  var memoizedFn = memoize(function () {\n    var fnArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      fnArgs[_i] = arguments[_i];\n    }\n\n    recomputations++;\n    return resultFunc.apply(void 0, tslib_1.__spread(fnArgs));\n  });\n  var memoizedSelectors = [];\n\n  var ret = function () {\n    var params = [];\n\n    for (var i = 0; i < selectors.length; i++) {\n      var selector = selectors[i];\n\n      if (Array.isArray(selector)) {\n        var _a = tslib_1.__read(selector, 2),\n            getState = _a[0],\n            map = _a[1];\n\n        if (!memoizedSelectors[i]) {\n          memoizedSelectors[i] = memoize(map);\n        }\n\n        params.push(memoizedSelectors[i](getState()));\n      } else {\n        params.push(selector());\n      }\n    }\n\n    return memoizedFn.apply(void 0, tslib_1.__spread(params));\n  };\n\n  var stateGetters = extractStateGetters(selectors);\n  ret.resultFunc = resultFunc;\n\n  ret.resetRecomputations = function () {\n    return recomputations = 0;\n  };\n\n  ret.recomputations = function () {\n    return recomputations;\n  };\n\n  ret.getStateGetters = function () {\n    return stateGetters;\n  };\n\n  return ret;\n}\n\nfunction extractStateGetters(selectors) {\n  var gettersSet = new Set();\n  var stateGetters = [];\n\n  var checkAdd = function (stateGetter) {\n    if (!gettersSet.has(stateGetter)) {\n      stateGetters.push(stateGetter);\n      gettersSet.add(stateGetter);\n    }\n  };\n\n  selectors.forEach(function (selector) {\n    if (Array.isArray(selector)) {\n      checkAdd(selector[0]);\n    } else {\n      selector.getStateGetters().forEach(checkAdd);\n    }\n  });\n  return stateGetters;\n}","map":null,"metadata":{},"sourceType":"module"}