import { OperatorFunction } from 'rxjs';
import { AC, Action } from '../types';
export declare type OfType = {
    <T extends AC>(ac: T): OperatorFunction<Action, ReturnType<T>>;
    <T extends AC, T2 extends AC>(ac: [T, T2]): OperatorFunction<Action, ReturnType<T> | ReturnType<T2>>;
    <T extends AC, T2 extends AC, T3 extends AC>(ac: [T, T2, T3]): OperatorFunction<Action, ReturnType<T> | ReturnType<T2> | ReturnType<T3>>;
    <T extends AC, T2 extends AC, T3 extends AC, T4 extends AC>(ac: [T, T2, T3, T4]): OperatorFunction<Action, ReturnType<T> | ReturnType<T2> | ReturnType<T3> | ReturnType<T4>>;
    <T extends AC, T2 extends AC, T3 extends AC, T4 extends AC, T5 extends AC>(ac: [T, T2, T3, T4, T5]): OperatorFunction<Action, ReturnType<T> | ReturnType<T2> | ReturnType<T3> | ReturnType<T4> | ReturnType<T5>>;
    <T extends AC, T2 extends AC, T3 extends AC, T4 extends AC, T5 extends AC, T6 extends AC>(ac: [T, T2, T3, T4, T5, T6]): OperatorFunction<Action, ReturnType<T> | ReturnType<T2> | ReturnType<T3> | ReturnType<T4> | ReturnType<T5> | ReturnType<T6>>;
};
export declare const ofType: OfType;
//# sourceMappingURL=ofType.d.ts.map