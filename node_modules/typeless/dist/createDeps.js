"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var utils_1 = require("./utils");
var useMappedState_1 = require("./useMappedState");
function createDepsSelector() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var selectors = args.slice(0, args.length - 1);
    var resultFunc = args[args.length - 1];
    var recomputations = 0;
    var memoizedFn = utils_1.memoize(function () {
        var fnArgs = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            fnArgs[_i] = arguments[_i];
        }
        recomputations++;
        return resultFunc.apply(void 0, tslib_1.__spread(fnArgs));
    });
    var ret = utils_1.memoize(function (state) {
        var e_1, _a;
        var params = [];
        try {
            for (var selectors_1 = tslib_1.__values(selectors), selectors_1_1 = selectors_1.next(); !selectors_1_1.done; selectors_1_1 = selectors_1.next()) {
                var selector = selectors_1_1.value;
                params.push(selector(state));
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (selectors_1_1 && !selectors_1_1.done && (_a = selectors_1.return)) _a.call(selectors_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return memoizedFn.apply(void 0, tslib_1.__spread(params));
    });
    ret.resultFunc = resultFunc;
    ret.resetRecomputations = function () { return (recomputations = 0); };
    ret.recomputations = function () { return recomputations; };
    return ret;
}
var StateProxy = (function () {
    function StateProxy(stateGetterMap) {
        this.stateGetterMap = stateGetterMap;
        this.state = null;
        this.stateArr = [];
        this.keys = Object.keys(stateGetterMap);
    }
    StateProxy.prototype.getState = function () {
        var newState = {};
        var newStateArr = [];
        for (var i = 0; i < this.keys.length; i++) {
            var key = this.keys[i];
            var localState = this.stateGetterMap[key]();
            newState[key] = localState;
            newStateArr[i] = localState;
        }
        if (!utils_1.shallowEqual(this.stateArr, newStateArr)) {
            this.state = newState;
            this.stateArr = newStateArr;
        }
        return this.state;
    };
    return StateProxy;
}());
function createDeps(stateGetterMap) {
    var stateProxy = new StateProxy(stateGetterMap);
    return {
        createSelector: function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var selector = createDepsSelector.apply(void 0, tslib_1.__spread(args));
            var wrapperSelector = function () {
                return selector(stateProxy.getState());
            };
            wrapperSelector.resultFunc = selector.resultFunc;
            wrapperSelector.resetRecomputations = selector.resetRecomputations;
            wrapperSelector.recomputations = selector.recomputations;
            return wrapperSelector;
        },
        useMappedState: function (mapper, deps) {
            if (deps === void 0) { deps = []; }
            var stateGetters = Object.values(stateGetterMap);
            return useMappedState_1.useMappedState(stateGetters, function () { return mapper(stateProxy.getState()); }, deps);
        },
    };
}
exports.createDeps = createDeps;
//# sourceMappingURL=createDeps.js.map