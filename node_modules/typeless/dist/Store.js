"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Store = (function () {
    function Store(name, displayName) {
        this.name = name;
        this.displayName = displayName;
        this.isEnabled = false;
        this.state = undefined;
        this.reducer = null;
        this.epic = null;
        this.listeners = [];
        this.usageCount = 0;
    }
    Store.prototype.initState = function () {
        if (this.reducer) {
            this.state = this.reducer(undefined, {
                type: [Symbol('__INIT__'), 'init'],
            });
        }
    };
    Store.prototype.enable = function (_a) {
        var epic = _a.epic, reducer = _a.reducer;
        this.usageCount++;
        this.epic = epic || null;
        this.reducer = reducer || null;
        this.isEnabled = true;
    };
    Store.prototype.disable = function () {
        this.usageCount--;
        if (!this.usageCount) {
            this.epic = null;
            this.reducer = null;
            this.isEnabled = false;
        }
    };
    Store.prototype.dispatch = function (action, notify) {
        var _this = this;
        if (!this.isEnabled) {
            return;
        }
        if (this.reducer) {
            var nextState = this.reducer(this.state, action);
            if (nextState !== this.state) {
                this.state = nextState;
                var notifyFn = function () {
                    var e_1, _a;
                    try {
                        for (var _b = tslib_1.__values(_this.listeners), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var listener = _c.value;
                            listener();
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                };
                if (notify) {
                    notify.add(notifyFn);
                }
                else {
                    notifyFn();
                }
            }
        }
    };
    Store.prototype.subscribe = function (listener) {
        var _this = this;
        this.listeners.push(listener);
        return function () {
            _this.listeners.splice(_this.listeners.indexOf(listener), 1);
        };
    };
    return Store;
}());
exports.Store = Store;
//# sourceMappingURL=Store.js.map