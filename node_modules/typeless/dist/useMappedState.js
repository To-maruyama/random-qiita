"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
function useMappedState(stateGetters, mapper, deps) {
    if (deps === void 0) { deps = []; }
    var mapperCached = React.useCallback(mapper, deps);
    var _a = tslib_1.__read(React.useReducer(function (x) { return x + 1; }, 0), 2), forceUpdate = _a[1];
    var stores = React.useMemo(function () {
        return stateGetters.map(function (getter) {
            if (!getter._store) {
                throw new Error("_store not found in getter for module \"" + (getter._module ||
                    'unknown') + "\". Make sure to load the module before using 'useState' or 'useMappedState'.");
            }
            return getter._store;
        });
    }, []);
    var getMappedState = function () {
        var states = stores.map(function (store) { return store.state; });
        return mapperCached.apply(void 0, tslib_1.__spread(states));
    };
    var getSubscribeFn = function () {
        stateRef.current = getMappedState();
        forceUpdate({});
    };
    var stateRef = React.useRef(getMappedState());
    var subscribeRef = React.useRef(getSubscribeFn);
    React.useLayoutEffect(function () {
        var subscriptions = stores.map(function (store) {
            return store.subscribe(function () { return subscribeRef.current(); });
        });
        return function () {
            subscriptions.forEach(function (subscription) { return subscription(); });
        };
    }, []);
    React.useMemo(function () {
        stateRef.current = getMappedState();
        subscribeRef.current = getSubscribeFn;
    }, deps);
    return stateRef.current;
}
exports.useMappedState = useMappedState;
//# sourceMappingURL=useMappedState.js.map